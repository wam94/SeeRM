name: TEST External Intel

on:
  schedule:
    - cron: '30 14 * * MON'   # Mondays 14:30 UTC (~10:30 ET)
  workflow_dispatch:
    inputs:
      callsigns:
        description: 'Comma-separated callsigns to include (optional)'
        required: false
      preview_only:
        description: 'Print HTML to logs instead of emailing'
        required: false
        default: 'false'
      send_to:
        description: 'Override recipient email (optional)'
        required: false
      lookback_days:
        description: 'Days to look back'
        required: false
        default: '10'
      max_per_org:
        description: 'Max items per org'
        required: false
        default: '5'

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run external intel
        env:
          PYTHONPATH: ${{ github.workspace }}
          GMAIL_CLIENT_ID: ${{ secrets.GMAIL_CLIENT_ID }}
          GMAIL_CLIENT_SECRET: ${{ secrets.GMAIL_CLIENT_SECRET }}
          GMAIL_REFRESH_TOKEN: ${{ secrets.GMAIL_REFRESH_TOKEN }}
          GMAIL_USER: ${{ secrets.GMAIL_USER }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          GOOGLE_CSE_ID: ${{ secrets.GOOGLE_CSE_ID }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}   # optional
          NEWS_GMAIL_QUERY: ${{ vars.NEWS_GMAIL_QUERY }}
          ATTACHMENT_REGEX: '.*\.csv$'
          NEWS_PROFILE_SUBJECT: ${{ vars.NEWS_PROFILE_SUBJECT }}'
          # map inputs -> env the app reads
          FILTER_CALLSIGNS: ${{ inputs.callsigns }}
          PREVIEW_ONLY: ${{ inputs.preview_only }}
          INTEL_LOOKBACK_DAYS: ${{ inputs.lookback_days }}
          INTEL_MAX_PER_ORG: ${{ inputs.max_per_org }}
          DIGEST_TO: ${{ inputs.send_to || secrets.DIGEST_TO }}
          DIGEST_CC: ${{ secrets.DIGEST_CC }}
          DIGEST_BCC: ${{ secrets.DIGEST_BCC }}
                    # Content fetching & summarization knobs
          FETCH_ARTICLE_CONTENT: 'true'      # set 'false' to disable fulltext fetch
          FETCH_MAX_PER_ORG: '3'             # number of articles to fetch per org
          ARTICLE_READ_TIMEOUT: '15'         # seconds per download
          ARTICLE_MAX_BYTES: '400000'        # cap per-article payload
        run: |
          python -m app.news_job
