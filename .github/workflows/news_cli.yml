name: External Intel (News via CLI)

on:
  schedule:
    - cron: "0 14 * * 1"  # Mondays 14:00 UTC
  workflow_dispatch:
    inputs:
      days:
        description: "Lookback window (days)"
        required: false
        default: "7"
        type: string
      no_email:
        description: "Skip email delivery (true/false)"
        required: false
        default: "false"
        type: choice
        options: ["true","false"]

permissions:
  contents: read

concurrency:
  group: news-weekly-cli-${{ github.ref }}
  cancel-in-progress: false

jobs:
  weekly_news:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Generate weekly news digest via CLI services
        env:
          PYTHONPATH: ${{ github.workspace }}

          # Gmail (optional for movements + sending email)
          GMAIL_CLIENT_ID: ${{ secrets.GMAIL_CLIENT_ID }}
          GMAIL_CLIENT_SECRET: ${{ secrets.GMAIL_CLIENT_SECRET }}
          GMAIL_REFRESH_TOKEN: ${{ secrets.GMAIL_REFRESH_TOKEN }}
          GMAIL_USER: ${{ secrets.GMAIL_USER }}
          DIGEST_TO: ${{ secrets.DIGEST_TO || secrets.GMAIL_USER }}

          # Notion (for company data and optional report pages)
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_COMPANIES_DB_ID: ${{ secrets.NOTION_COMPANIES_DB_ID }}
          NOTION_REPORTS_DB_ID: ${{ secrets.NOTION_REPORTS_DB_ID }}

          # OpenAI (optional summaries)
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_CHAT_MODEL: ${{ vars.OPENAI_CHAT_MODEL || 'gpt-4o-mini' }}
          OPENAI_TEMPERATURE: ${{ vars.OPENAI_TEMPERATURE || '0.2' }}

          # Intelligence options
          INTELLIGENCE_DEFAULT_REPORT_DAYS: ${{ inputs.days || '7' }}
          PREVIEW_ONLY: ${{ inputs.no_email || 'false' }}
        run: |
          python - <<'PY'
          from app.core.config import Settings
          from app.cli_commands.reports import _create_services
          from app.reports.weekly_news import WeeklyNewsReport

          settings = Settings()
          aggregator, notion_client = _create_services(settings)
          gen = WeeklyNewsReport(aggregator=aggregator, notion_client=notion_client, settings=settings)
          report = gen.generate(days=settings.intelligence.default_report_days, include_email=(settings.intelligence.preview_only is False))
          print('Done. Report generated.' if report else 'No news items for period.')
          PY
