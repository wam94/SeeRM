name: Preflight

on:
  schedule:
    - cron: '0 13 * * MON'   # Mondays 13:00 UTC (9:00 ET during DST)
  workflow_dispatch: {}

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    # If you stored Environment secrets (e.g., "prod"), uncomment:
    # environment: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # --- Preflight checks: prove secrets are present (length only; values masked) ---
      - name: Preflight env check
        run: |
          python - <<'PY'
          import os
          def show(name):
              val = os.getenv(name)
              print(f"{name}: present={bool(val)} length={len(val) if val else 0}")
          for n in ["GMAIL_CLIENT_ID","GMAIL_CLIENT_SECRET","GMAIL_REFRESH_TOKEN","GMAIL_USER"]:
              show(n)
          PY
        env:
          GMAIL_CLIENT_ID: ${{ secrets.GMAIL_CLIENT_ID }}
          GMAIL_CLIENT_SECRET: ${{ secrets.GMAIL_CLIENT_SECRET }}
          GMAIL_REFRESH_TOKEN: ${{ secrets.GMAIL_REFRESH_TOKEN }}
          GMAIL_USER: ${{ secrets.GMAIL_USER }}

      # --- Optional: quick import sanity check (remove after first success) ---
      - name: Debug import path
        run: |
          python - <<'PY'
          import sys, os, importlib.util
          print("CWD:", os.getcwd())
          print("Has app/ directory:", os.path.isdir("app"))
          print("Files in app/:", os.listdir("app") if os.path.isdir("app") else "N/A")
          print("sys.path (first 3):", sys.path[:3])
          print("find_spec('app'):", importlib.util.find_spec("app"))
          PY
        env:
          PYTHONPATH: ${{ github.workspace }}

      # --- Run the weekly digest ---
      - name: Run weekly digest
        env:
          PYTHONPATH: ${{ github.workspace }}
          GMAIL_CLIENT_ID: ${{ secrets.GMAIL_CLIENT_ID }}
          GMAIL_CLIENT_SECRET: ${{ secrets.GMAIL_CLIENT_SECRET }}
          GMAIL_REFRESH_TOKEN: ${{ secrets.GMAIL_REFRESH_TOKEN }}
          GMAIL_USER: ${{ secrets.GMAIL_USER }}
          # Optional overrides (add these repo secrets only if you need them):
          DIGEST_TO: ${{ secrets.DIGEST_TO }}
          DIGEST_CC: ${{ secrets.DIGEST_CC }}
          DIGEST_BCC: ${{ secrets.DIGEST_BCC }}
          # You can also set repo Variables and read them in code; the app already has sane defaults
          # GMAIL_QUERY: ${{ vars.GMAIL_QUERY }}
          # ATTACHMENT_REGEX: ${{ vars.ATTACHMENT_REGEX }}
          # TOP_MOVERS: ${{ vars.TOP_MOVERS }}
          # DIGEST_SUBJECT: ${{ vars.DIGEST_SUBJECT }}
        run: |
          python -m app.main
